C51 COMPILER V9.52.0.0   KEYSCAN                                                           04/16/2020 10:07:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE KEYSCAN
OBJECT MODULE PLACED IN .\Output\KeyScan.obj
COMPILER INVOKED BY: D:\Keil4\C51\BIN\C51.EXE ..\User\Source\Function\KeyScan.c LARGE OMF2 WARNINGLEVEL(0) OPTIMIZE(5,SP
                    -EED) BROWSE INCDIR(..\Library\FU68xx_Hardware_Driver\Include;..\User\Include) DEBUG PRINT(.\Listing\KeyScan.lst) TABS(2)
                    - OBJECT(.\Output\KeyScan.obj)

line level    source

   1          /**************************** (C) COPYRIGHT 2015 Fortiortech shenzhen *****************************
   2          * File Name          : KeyScan.c
   3          * Author             : Billy Long Fortiortech  Market Dept
   4          * Version            : V1.0
   5          * Date               : 01/07/2015
   6          * Description        : This file contains key scan function used for Motor Control.
   7          ***************************************************************************************************
   8          * All Rights Reserved
   9          **************************************************************************************************/ 
  10          
  11          
  12          /* Includes -------------------------------------------------------------------------------------*/
  13          #include <FU68xx_2.h>
  14          #include <Myproject.h>
  15          
  16          char SW1_Flag=0;
  17          char SW2_Flag=0;
  18          char SW3_Flag=0;
  19          
  20          char Flag_Key1Value=0;        //档位变换顺序
  21          char Flag_Key2Value=0;
  22          
  23          /* Private variables ----------------------------------------------------------------------------*/
  24          KeyScanParam_TypeDef  KS;
  25          KeyControl_TypeDef  KeyControl;
  26          
  27          
  28          /*-------------------------------------------------------------------------------------------------
  29            Function Name : void KeyInit(void)
  30            Description   : 按键参数初始化
  31            Input         : 无
  32            Output        : 无
  33          -------------------------------------------------------------------------------------------------*/
  34          void KeyInit(void)
  35          {
  36   1        KeyControl.FlagSpeed = 1;
  37   1        
  38   1        KS.Key1Value = 0x02;
  39   1        
  40   1        KS.Key2Value = 0x20;
  41   1        
  42   1        KS.Key3Value = 0x00;
  43   1        
  44   1        KS.KeyValuetotal     = KS.Key1Value ^ KS.Key2Value ^ KS.Key3Value;
  45   1        
  46   1        Rom.ReadValue = Flash_GetAddress(); 
  47   1        
  48   1        if((Rom.ReadValue == 0x11)||(Rom.ReadValue == 0x21) ||(Rom.ReadValue == 0x41) ||(Rom.ReadValue == 0x12) |
             -|(Rom.ReadValue == 0x22)
  49   1        ||(Rom.ReadValue == 0x42)||(Rom.ReadValue == 0x14)||(Rom.ReadValue== 0x24)||(Rom.ReadValue == 0x44)||(Rom
             -.ReadValue == 0x18)
  50   1        ||(Rom.ReadValue == 0x28)||(Rom.ReadValue == 0x48))
  51   1        {
C51 COMPILER V9.52.0.0   KEYSCAN                                                           04/16/2020 10:07:50 PAGE 2   

  52   2          KS.KeyValuetotal   = Rom.ReadValue;
  53   2          
  54   2          KS.Key1Value = Rom.ReadValue & 0x0F;
  55   2        
  56   2          KS.Key2Value = Rom.ReadValue & 0x70;;
  57   2        
  58   2          KS.Key3Value = 0x00;
  59   2        }
  60   1        else
  61   1        {
  62   2          Flash_ErasePageRom();
  63   2          Flash_KeyWriteValue((0x41));//0x21
  64   2          EA = 1;
  65   2        }
  66   1        KS.OldKeyValuetotal  = 0;
  67   1        KS.ChangeKeyFlg      = 0;
  68   1        KS.FlashWriteOnetimes = 0; 
  69   1        
  70   1        KS.FlagKey0Press = 0;
  71   1        KS.Key0PressCnt = 0;  
  72   1        
  73   1        KS.FlagKey1Press = 0;
  74   1        KS.Key1PressCnt = 0;  
  75   1        
  76   1      //  while((KS.Key0PressCnt != KeyFilterTime)&&(KS.Key0PressCnt != -KeyFilterTime))
  77   1      //  {
  78   1      //    KeyValue();
  79   1      //  } 
  80   1      }
  81          
  82          /*-------------------------------------------------------------------------------------------------
  83            Function Name : uint8 KeyValue(void)
  84            Description   : 功能函数，获取按键值，选择返回键位值还是管脚电平KeyValue
  85            Input         : 无
  86            Output        : 键位值或者管脚电平KeyValue
  87          -------------------------------------------------------------------------------------------------*/
  88          int KeyValue(void)
  89          {
  90   1        /* SW1 Scan */
  91   1        if(SW1==0)
  92   1        {
  93   2          if(SW1_Flag==0)
  94   2          {
  95   3            KS.Key1PressCnt ++;
  96   3            if(KS.Key1PressCnt >= KeyFilterTime)
  97   3            {
  98   4              KS.Key1PressCnt = KeyFilterTime;
  99   4              SW1_Flag=1;
 100   4              if((KS.Key1Value < 0x08)&&(Flag_Key1Value==0))
 101   4              {
 102   5                 KS.Key1Value = KS.Key1Value <<1;
 103   5              }
 104   4              else if((KS.Key1Value > 0x01)&&(Flag_Key1Value==1))
 105   4              {
 106   5                 KS.Key1Value = KS.Key1Value >>1;
 107   5              }
 108   4              else if(KS.Key1Value == 0x08)
 109   4              {
 110   5                Flag_Key1Value= 1;
 111   5                KS.Key1Value = KS.Key1Value >>1;
 112   5              }
 113   4              else if(KS.Key1Value == 0x01)
C51 COMPILER V9.52.0.0   KEYSCAN                                                           04/16/2020 10:07:50 PAGE 3   

 114   4              {
 115   5                Flag_Key1Value= 0;
 116   5                KS.Key1Value = KS.Key1Value <<1;
 117   5              }
 118   4              else
 119   4              {
 120   5                Flag_Key1Value= 0;
 121   5                KS.Key1Value = 0x01;
 122   5              }   
 123   4                 
 124   4            }
 125   3          }
 126   2          else if(SW1_Flag==1)
 127   2          {
 128   3             KS.Key1Value = KS.Key1Value ;
 129   3          }
 130   2          else
 131   2             SW1_Flag=0;
 132   2          
 133   2        }
 134   1        else
 135   1        {   
 136   2           KS.Key1PressCnt --;
 137   2           if(KS.Key1PressCnt <= 0)
 138   2           {
 139   3             KS.Key1PressCnt = 0;
 140   3             SW1_Flag=0;
 141   3      //       KS.FlagKey0Press = 1;
 142   3           }
 143   2        }     
 144   1        
 145   1        /* SW2 Scan */
 146   1        if(SW2==0)
 147   1        {
 148   2          if(SW2_Flag==0)
 149   2          {
 150   3            KS.Key2PressCnt ++;
 151   3            if(KS.Key2PressCnt >= KeyFilterTime)
 152   3            {
 153   4              KS.Key2PressCnt = KeyFilterTime;
 154   4              SW2_Flag=1;
 155   4              
 156   4              if((KS.Key2Value < 0x40)&&(Flag_Key2Value==0))
 157   4              {
 158   5                 KS.Key2Value = KS.Key2Value <<1;
 159   5              }
 160   4              else if((KS.Key2Value > 0x10)&&(Flag_Key2Value==1))
 161   4              {
 162   5                 KS.Key2Value = KS.Key2Value >>1;
 163   5              }
 164   4              else if(KS.Key2Value == 0x40)
 165   4              {
 166   5                Flag_Key2Value= 1;
 167   5                KS.Key2Value = KS.Key2Value >>1;
 168   5              }
 169   4              else if(KS.Key2Value == 0x10)
 170   4              {
 171   5                Flag_Key2Value= 0;
 172   5                KS.Key2Value = KS.Key2Value <<1;
 173   5              }
 174   4              else
 175   4              {
C51 COMPILER V9.52.0.0   KEYSCAN                                                           04/16/2020 10:07:50 PAGE 4   

 176   5                Flag_Key2Value= 0;
 177   5                KS.Key2Value = 0x20;
 178   5              }         
 179   4            }
 180   3          }
 181   2          else if(SW2_Flag==1)
 182   2          {
 183   3             KS.Key2Value = KS.Key2Value ;
 184   3          }
 185   2          else
 186   2             SW2_Flag=0;
 187   2          
 188   2        }
 189   1        else
 190   1        {   
 191   2           KS.Key2PressCnt --;
 192   2           if(KS.Key2PressCnt <= 0)
 193   2           {
 194   3             KS.Key2PressCnt = 0;
 195   3             SW2_Flag=0;
 196   3      //       KS.FlagKey0Press = 1;
 197   3           }
 198   2        }
 199   1      
 200   1        #if 0
                if(SW3==0)
                {
                   KS.Key3releaseCnt=0;
                  
                  KS.Key3PressCnt=1;
                }
                else
                {
                  KS.Key3PressCnt=0;
                  
                  KS.Key3releaseCnt=1;
                }
                #endif
 214   1        
 215   1        #if 1
 216   1      /* SW3 Scan */
 217   1        if(SW3==0)
 218   1        {
 219   2            KS.Key3releaseCnt=0;
 220   2          if(KS.Key3PressCnt<KeyFilterTime+10)
 221   2          KS.Key3PressCnt++;
 222   2          {
 223   3            if(KS.Key3PressCnt >= KeyFilterTime)
 224   3            {
 225   4              KS.Key3PressCnt = KeyFilterTime;
 226   4              SW3_Flag=1;
 227   4                      
 228   4               KS.Key3Value = 0x08;
 229   4                 
 230   4            }
 231   3          }
 232   2          #if 0
                  else if(SW2_Flag==1)
                  {
                     KS.Key3Value = KS.Key3Value ;
                  }
                  #endif
C51 COMPILER V9.52.0.0   KEYSCAN                                                           04/16/2020 10:07:50 PAGE 5   

 238   2        } 
 239   1        else
 240   1        {   
 241   2           KS.Key3PressCnt=0;
 242   2          if(KS.Key3releaseCnt<100)
 243   2           KS.Key3releaseCnt++;
 244   2           if(KS.Key3releaseCnt >= 80)
 245   2           {
 246   3             SW3_Flag=0;
 247   3             KS.Key3Value = 0x00;      
 248   3           }
 249   2        } 
 250   1        #endif
 251   1        
 252   1        return (KS.Key1Value ^ KS.Key2Value ^ KS.Key3Value);  
 253   1      }
 254          
 255          /*-------------------------------------------------------------------------------------------------
 256            Function Name : void KeyScan(void)
 257            Description   : 功能函数，按键扫描，按键触发传递出按键命令
 258            Input         : 无
 259            Output        : 无
 260          -------------------------------------------------------------------------------------------------*/
 261          void KeyScan(void)
 262          {
 263   1        KS.OldKeyValuetotal = KS.KeyValuetotal;
 264   1        
 265   1        KS.KeyValuetotal = KeyValue();
 266   1      
 267   1        
 268   1        if(KS.OldKeyValuetotal != KS.KeyValuetotal)
 269   1        {
 270   2          if((mcState == mcRun))
 271   2          {
 272   3            KS.ChangeKeyFlg =1;
 273   3            KS.FlashWriteOnetimes = 0;      
 274   3          }
 275   2        }
 276   1        
 277   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    852    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     37    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
